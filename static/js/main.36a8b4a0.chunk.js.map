{"version":3,"sources":["burguerQueen.png","components/Navigation.js","components/Kitchen.js","actions/Client.js","actions/actionTypes.js","components/Client.js","components/Waiter.js","components/Desayuno.js","components/Almuerzo.js","App.js","serviceWorker.js","reducers/index.js","reducers/client.js","store/index.js","store/initialState.js","index.js"],"names":["module","exports","__webpack_require__","p","withRouter","props","history","react_default","a","createElement","className","src","burguerQueen","alt","class","type","onClick","push","Kitchen","Component","firstName","dispatch","client","payload","Cliente","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleName","e","preventDefault","turnName","getTitle","value","bind","assertThisInitialized","_this2","onSubmit","onChange","name","ref","input","connect","state","objectSpread","Desayuno","desayunoMenu","desayuno","map","single","i","key","precio","Almuerzo","almuerzoMenu","almuerzo","App","react_router_dom","basename","process","react_router","path","component","Navigation","Waiter","Boolean","window","location","hostname","match","combineReducers","arguments","length","undefined","action","createStore","reducer","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36a8b4a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burguerQueen.29029846.png\";","import React from 'react';\nimport burguerQueen from '../burguerQueen.png';\nimport { withRouter } from 'react-router-dom';\nimport './navigation.css';\n\nfunction Navigation (props){\n  const {history} = props;\n  return (\n    <div>\n      <div className= \"navbarBurger\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <img src={burguerQueen} className=\"logoImg\" alt=\"logo\" />   \n          </div>\n          <div class=\"col\">\n            <button  type=\"button\" class=\"btn btn-danger\" onClick={()=>{history.push(\"./waiter\")}} >MESERO</button>\n            <button type=\"button\" class=\"btn btn-danger\" onClick={()=>{history.push(\"./kitchen\")}} >COCINA</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(Navigation);\n","import React, {Component} from 'react';\n\nclass Kitchen extends Component{\n    render(){\n        return (\n            <article className=\"breakfast\">\n            \n            <h2>ORDENES</h2>\n\n            </article>\n        )\n    }\n}\nexport default Kitchen;\n","import { clientnew } from \"./actionTypes\";\n\nexport const firstName = dispatch => (client) => {\n    dispatch({\n        type: clientnew,\n        payload: client\n    })\n}","export const clientnew =\"clientnew\";\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {firstName} from '../actions/Client';\n\nclass Cliente extends Component {\n    constructor(props) {\n        super(props);\n        this.handleName = this.handleName.bind(this);\n      }\n    handleName = (e) => {\n        e.preventDefault();\n        this.props.turnName(this.getTitle.value)\n    }\n      \n  render() {\n     \n  return (\n    <div>\n       <form onSubmit={this.handleName}>\n          <div className=\"form-group\">\n            <input\n              onChange={this.props.onChange}\n              className=\"form-control\"\n              type=\"text\"\n              name=\"firstName\"\n              ref={(input) => this.getTitle = input}\n              //value={this.props.formValues.firstName}\n            />\n          </div>\n          <button type = \"submit\">Enviar </button>\n        </form>\n\n    </div>\n  );\n }\n}\nconst mapStateToProps = (state)=>{\n    return {\n      ...state\n    };\n  };\n  \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      turnName: firstName(dispatch),\n      \n    }\n  }\n\n  \n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n    )(Cliente);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './navigation.css';\nimport Client from './Client';\nimport {connect} from 'react-redux';\n\n\n\nfunction  Waiter (props){\n  const {history} = props;\n  return (\n  \n  <div className=\"container\">\n \n    {/* <Client/>\n    <div id = \"dinerName\"> \n   {this.props.client.client}  */}\n   \n        <div className=\"row\">\n            <div className=\"col\">\n                <button  type=\"button\" class=\"btn btn-danger\" onClick={()=>{history.push(\"./desayuno\")}} >DESAYUNO</button>\n                <button type=\"button\" class=\"btn btn-danger\" onClick={()=>{history.push(\"./almuerzo\")}} >ALMUERZO</button>\n            </div>\n            <div class=\"col\">\n            <p>ORDENES</p>\n            </div>\n        </div>\n    </div>\n  );\n}\n\n// const mapStateToProps = (state)=>{\n//     return {\n//       ...state\n//     };\n//   }\n\n// export default withRouter(connect ( mapStateToProps )(Waiter));\n   \n\n// import React, {Component} from 'react';\n// import {desayuno,almuerzo} from './../menu.json'\n\n// class Waiter extends Component{\n    \n//     render() {\n//         const almuerzoMenu = almuerzo.map((single, i) => {\n//             return (\n//               <div key={i}>\n//                 <button>{single.name}</button>\n//               </div>\n//             );\n//           })\n//         const desayunoMenu = desayuno.map((single, i) => {\n//           return (\n//             <div key={i}>\n//                <button>{single.name}</button>\n//             </div>\n//           );\n//         })\n//         return (\n//             <div className= \"container\">\n//                 <div>{desayunoMenu }</div>\n//                 <div> {almuerzoMenu }</div>  \n//             </div>\n\n//         )\n//     }\n// }\nexport default withRouter(Waiter);","import React, {Component} from 'react';\nimport {desayuno} from './../menu.json'\n\nclass Desayuno extends Component{\n    \n    render() {\n        const desayunoMenu = desayuno.map((single, i) => {\n          return (\n            <div key={i}>\n               <button type=\"button\" class=\"btn btn-dark\">{single.name + \" \"+\"$ \"+single.precio}</button>\n            </div>\n          );\n        })\n        return (\n            <div className= \"container\">\n                <div>{desayunoMenu }</div> \n            </div>\n\n        )\n    }\n}\n\nexport default Desayuno ;","import React, {Component} from 'react';\nimport {almuerzo} from './../menu.json'\n\nclass Almuerzo extends Component{\n    \n    render() {\n        const almuerzoMenu = almuerzo.map((single, i) => {\n            return (\n              <div key={i}>\n                <button type=\"button\" class=\"btn btn-dark\">{single.name + \" \"+\"$ \"+single.precio}</button>\n              </div>\n            );\n          })\n\n        return (\n            <div className= \"container\">\n                <div> {almuerzoMenu }</div>  \n            </div>\n\n        )\n    }\n}\n\nexport default Almuerzo ;","import React  from 'react';\nimport Navigation from './components/Navigation';\nimport { BrowserRouter , Route} from 'react-router-dom'\nimport Kitchen from './components/Kitchen';\nimport Waiter from './components/Waiter';\nimport desayuno from './components/Desayuno';\nimport almuerzo from './components/Almuerzo';\n\nfunction App() {\n      return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Route path =\"/\" component={Navigation}/>\n      <Route path =\"/kitchen\" component={Kitchen}/>\n      <Route path =\"/waiter\" component={Waiter}/>\n      <Route path =\"/desayuno\" component={desayuno}/>\n      <Route path =\"/almuerzo\" component={almuerzo}/>\n      </BrowserRouter>\n    );\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport client from './client';\n\nexport default combineReducers({\n  client\n});","import {clientnew} from '../actions/actionTypes'\n\nexport default (\n    state = {\n        client: \"\"\n    },\n    action\n ) => {\n     switch(action.type){\n         case clientnew : \n         return {\n             ...state,\n             client: action.payload\n         }\n         default: return state;\n     }\n }","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from '../reducers';\nimport state from './initialState';\n\nexport default createStore(\n  reducer,\n  state,\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\n);","export default {\n  \n  };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}